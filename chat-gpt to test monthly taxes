import smtplib
import schedule
import time
import datetime
import os

from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.base import MIMEBase
from email import encoders


def send_email_with_attachments(sender_email, sender_password, receiver_email, subject, body, attachments):
    message = MIMEMultipart()
    message["From"] = sender_email
    message["To"] = receiver_email
    message["Subject"] = subject

    message.attach(MIMEText(body, "plain"))

    for attachment in attachments:
        with open(attachment, "rb") as file:
            part = MIMEBase("application", "octet-stream")
            part.set_payload(file.read())

        encoders.encode_base64(part)
        part.add_header(
            "Content-Disposition",
            f"attachment; filename= {os.path.basename(attachment)}",
        )
        message.attach(part)

    with smtplib.SMTP("smtp.gmail.com", 587) as server:
        server.starttls()
        server.login(sender_email, sender_password)
        server.sendmail(sender_email, receiver_email, message.as_string())


def send_monthly_email():
    # Replace with your own email and password
    sender_email = "your_email@gmail.com"
    sender_password = "your_password"

    receiver_email = "recipient_email@gmail.com"
    subject = "Monthly Report"
    body = "Hello, please find attached the monthly report."

    current_month = datetime.datetime.now().strftime("%B")  # Get current month name
    attachment_filename = f"report_{current_month}.pdf"  # Generate attachment filename dynamically

    attachments = [
        f"/path/to/{attachment_filename}",
        # Add more attachments if needed
    ]

    send_email_with_attachments(sender_email, sender_password, receiver_email, subject, body, attachments)


schedule.every().month.do(send_monthly_email)

while True:
    schedule.run_pending()
    time.sleep(1)
